(()=>{"use strict";const e={url:"http://api.geonames.org/searchJSON",username:"bisharababish"},t={url:"https://api.weatherbit.io/v2.0/current",apiKey:"e8892106d42147e59d2e99e48f5db4a1"},r={url:"https://pixabay.com/api/",apiKey:"49086266-17ad6b506961fd75033c57d3c"},a={location:"New York",latitude:"",longitude:"",temperature:"",weatherDescription:"",imageUrl:"",error:""},o=async o=>{try{if(!o)throw new Error("Please enter a valid location.");const{latitude:n,longitude:i}=await(async t=>{const{url:r,username:a}=e;try{const e=await fetch(`${r}?q=${t}&maxRows=1&username=${a}`);if(!e.ok)throw new Error(`Geonames API Error: ${e.statusText}`);const o=await e.json();if(console.log("Geonames API Response:",o),o.geonames&&o.geonames.length>0)return{latitude:o.geonames[0].lat,longitude:o.geonames[0].lng};throw new Error("Location not found")}catch(e){throw console.error("Geonames API Error:",e),e}})(o),{temperature:s,weatherDescription:c}=await(async(e,r)=>{const{url:a,apiKey:o}=t;try{const t=await fetch(`${a}?lat=${e}&lon=${r}&key=${o}`);if(!t.ok)throw new Error(`Weatherbit API Error: ${t.statusText}`);const n=await t.json();if(console.log("Weatherbit API Response:",n),n.data&&n.data.length>0)return{temperature:n.data[0].temp,weatherDescription:n.data[0].weather.description};throw new Error("Weather data not found")}catch(e){throw console.error("Weatherbit API Error:",e),e}})(n,i),{imageUrl:l}=await(async e=>{const{url:t,apiKey:a}=r;try{const r=await fetch(`${t}?key=${a}&q=${e}&image_type=photo`);if(!r.ok)throw new Error(`Pixabay API Error: ${r.statusText}`);const o=await r.json();if(console.log("Pixabay API Response:",o),o.hits&&o.hits.length>0){const e=Math.floor(Math.random()*o.hits.length);return{imageUrl:o.hits[e].webformatURL}}throw new Error("Image not found")}catch(e){throw console.error("Pixabay API Error:",e),e}})(o);return{...a,location:o,latitude:n,longitude:i,temperature:s,weatherDescription:c,imageUrl:l}}catch(e){return console.error("Error fetching travel data:",e.message),{...a,location:o,error:e.message||"Failed to fetch travel data. Please try again."}}};document.getElementById("search-button").addEventListener("click",(async()=>{const e=document.getElementById("location-input").value;try{const t=await o(e);console.log("Travel Data:",t),document.getElementById("weather").innerHTML=`\n      <p>Temperature: ${t.temperature}°C</p>\n      <p>Weather: ${t.weatherDescription}</p>\n    `,document.getElementById("image").innerHTML=`\n      <img src="${t.imageUrl}" alt="Travel Image" style="max-width: 100%;">\n    `}catch(e){console.error("Error:",e),document.getElementById("weather").innerHTML=`<p>Error: ${e.message}</p>`}})),document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM fully loaded and parsed");const e=document.getElementById("search-button"),t=document.getElementById("location-input"),r=document.getElementById("weather"),a=document.getElementById("image");e.addEventListener("click",(()=>{const e=t.value.trim();console.log("Search Button Clicked. Location:",e),e?(async e=>{try{const t=await o(e);console.log("Travel Data:",t),t.error?(r.innerHTML=`<p>Error: ${t.error}</p>`,a.innerHTML=""):(r.innerHTML=`\n          <h2>${t.location}</h2>\n          <p>Latitude: ${t.latitude}</p>\n          <p>Longitude: ${t.longitude}</p>\n          <p>Temperature: ${t.temperature}°C</p>\n          <p>Weather: ${t.weatherDescription}</p>\n        `,a.innerHTML=`\n          <img src="${t.imageUrl}" alt="${t.location}" />\n        `)}catch(e){console.error("Error fetching travel data:",e),r.innerHTML=`<p>Error: ${e.message}</p>`,a.innerHTML=""}})(e):alert("Please enter a valid location.")}))})),"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register("/service-worker.js").then((e=>{console.log("Service Worker registered: ",e)})).catch((e=>{console.log("Service Worker registration failed: ",e)}))}))})();